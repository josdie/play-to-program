<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head>



<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" href="rurple.css" type="text/css" /><title>RUR-PLE Instructions</title></head><body>
<h2 class="title">Playing to Program: Learning Python with RUR-PLE!</h2>

<h6>André Roberge, © 2005-2010<br />
David Walser, Robert Deloatch, Eliana Feasley, Amy Ciavolino, © 2010-2011<br />
</h6>
<p>Welcome to RUR-PLE!&nbsp; In RUR-PLE, you will find a robot named
Reeborg who is controlled by Python programs.&nbsp; These Python
programs contain instructions that tell Reeborg to perform actions and
tests that help Reeborg decide what to do.&nbsp; Reeborg is placed in
an environment that is surrounded by walls and can contain other walls
as well as objects called beepers, which Reeborg can pick up, hold on
to, and put down.&nbsp; To help test and develop your understanding of
Python, you will be given an environment and a Python program, and your
task will be to write code to control what Reeborg will do 
when running the given program so that it completes the task.&nbsp; 
The instructions for Reeborg's actions and tests are below.<br />
</p>
<h3 class="section">Summary of instructions</h3>

<p>Reeborg's actions:</p>

<pre>move()		- moves Reeborg forward one step<br />turn_left()	- turns Reeborg 90° to the left<br />turn_right()	- turns Reeborg 90° to the right<br />grab_beeper()	- pick up one of the beepers Reeborg is standing on<br />drop_beeper()	- puts down one of the beepers that Reeborg is holding<br />turn_off()	- turns Reeborg off when he has completed a task<br /></pre>

<p>Tests:</p>

<pre>front_is_clear()	- returns True if there is no wall directly in front of Reeborg<br />left_is_clear()		- returns True if there is no wall on Reeborg's left side<br />right_is_clear()	- returns True if there is no wall on Reeborg's right side<br />facing_north()		- returns True if Reeborg is facing upward<br />carries_beepers()	- returns True if Reeborg is holding any beepers<br />on_beeper()		- returns True if Reeborg is standing on any beepers<br/></pre>
<h3><span class="section">Errors</span><br/>
</h3>
<p>Certain actions can cause errors which make Reeborg complain and
turn off.&nbsp; Avoid these actions to assure that Reeborg completes
the problem assigned.<br />
</p>
<p>Actions which cause errors:<br />
</p>
<ul>
  <li>Move - when a wall is in front of Reeborg</li>
  <li>Grab Beeper - when Reeborg is not standing on any beepers</li>
  <li>Drop Beeper - when Reeborg is not holding any beepers<br />
  </li>
</ul>
<h3><span class="section">Testing your answer</span>
</h3>

<p>To test your solution you can use the run button.&nbsp;<img style="width: 32px; height: 32px;" alt="Run" title="Run" src="../../rur_images/run1.png" /></p>
<p>RUR-PLE will then run the robot program, and you can watch and see
the output of your code.&nbsp; You can control the speed with which the
program runs by using the Adjust robot speed slider on the
toolbar&nbsp; but you have to set the speed before the program starts running for the
adjustment to take effect.&nbsp; As the program runs, the line of code
that is currently executing will be highlighted in the code window on
the left.&nbsp; When the program is done running Reeborg will stop moving
and no code will be highlighted.<br />
</p>
<p>Once the program has run, if an error was hit you can make changes
to your code. You can then run the program again to see how Reeborg's
behaviors change.&nbsp; The controls for this are on the toolbar and 
behave like a visual debugger, which will be familiar if you have ever 
used one.&nbsp; These controls
are:</p>
<ul>
  <li><img style="width: 32px; height: 32px;" alt="Run robot program" title="Run robot program" src="../../rur_images/run1.png" />- Run the program</li>
  <li><img style="width: 22px; height: 22px;" alt="Stop program" title="Stop program" src="../../rur_images/stop.png" />&nbsp;&nbsp; - Stop running the program. To rerun the program you should first reset the world.</li>
  <li><img style="width: 32px; height: 32px;" alt="Reset the world" title="Reset the world" src="../../rur_images/reset_world.png" />- Reset the world and program. Must not be running to execute.</li>
  <li><img style="width: 32px; height: 32px;" alt="Step through robot program instructions" title="Step through robot program instructions" src="../../rur_images/step.png" />- Execute one statement and move to the next statement. When executing first statement the button must be hit twice, once to toggle it in and once to toggle it out. To exit step mode you must first stop the program. You may then reset the world.</li>
  <li><img style="width: 32px; height: 32px;" alt="Pause program" title="Pause program" src="../../rur_images/pause.png" />- Pause/Unpause execution of the program</li>
<li><img style="width: 22px; height: 22px;" alt="Instruction Sheet" title="Instruction Sheet" src="../../rur_images/help.png" />- Load the instruction screen for the problem.</li>
</ul>
<p>Once you have entered your final solution, click on the Submit/Next button on the toolbar.&nbsp; <img style="width: 32px; height: 32px;" alt="Submit/Next" title="Submit/Next" src="../../rur_images/checkmark.png" />
</p><p>This submission is final and will advance you to the next question.</p>
<p><b>To begin click the 'Robot: Code and Learn' tab and then click the </b><img style="width: 32px; height: 32px;" alt="Submit/Next" title="Submit/Next" src="../../rur_images/checkmark.png" /></p>

</body></html>
